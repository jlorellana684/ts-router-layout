/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthLayoutImport } from './routes/auth/layout'
import { Route as AppLayoutImport } from './routes/app/layout'
import { Route as AuthIndexImport } from './routes/auth/index'
import { Route as landingIndexImport } from './routes/(landing)/index'
import { Route as AppUsersIndexImport } from './routes/app/users/index'
import { Route as AppUsersUserIdEditLayoutImport } from './routes/app_/users/$userId/edit/layout'
import { Route as AppUsersUserIdEditIndexImport } from './routes/app_/users/$userId/edit/index'

// Create/Update Routes

const AuthLayoutRoute = AuthLayoutImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const AppLayoutRoute = AppLayoutImport.update({
  id: '/app',
  path: '/app',
  getParentRoute: () => rootRoute,
} as any)

const AuthIndexRoute = AuthIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthLayoutRoute,
} as any)

const landingIndexRoute = landingIndexImport.update({
  id: '/(landing)/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AppUsersIndexRoute = AppUsersIndexImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => AppLayoutRoute,
} as any)

const AppUsersUserIdEditLayoutRoute = AppUsersUserIdEditLayoutImport.update({
  id: '/app_/users/$userId/edit',
  path: '/app/users/$userId/edit',
  getParentRoute: () => rootRoute,
} as any)

const AppUsersUserIdEditIndexRoute = AppUsersUserIdEditIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppUsersUserIdEditLayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppLayoutImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthLayoutImport
      parentRoute: typeof rootRoute
    }
    '/(landing)/': {
      id: '/(landing)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof landingIndexImport
      parentRoute: typeof rootRoute
    }
    '/auth/': {
      id: '/auth/'
      path: '/'
      fullPath: '/auth/'
      preLoaderRoute: typeof AuthIndexImport
      parentRoute: typeof AuthLayoutImport
    }
    '/app/users/': {
      id: '/app/users/'
      path: '/users'
      fullPath: '/app/users'
      preLoaderRoute: typeof AppUsersIndexImport
      parentRoute: typeof AppLayoutImport
    }
    '/app_/users/$userId/edit': {
      id: '/app_/users/$userId/edit'
      path: '/app/users/$userId/edit'
      fullPath: '/app/users/$userId/edit'
      preLoaderRoute: typeof AppUsersUserIdEditLayoutImport
      parentRoute: typeof rootRoute
    }
    '/app_/users/$userId/edit/': {
      id: '/app_/users/$userId/edit/'
      path: '/'
      fullPath: '/app/users/$userId/edit/'
      preLoaderRoute: typeof AppUsersUserIdEditIndexImport
      parentRoute: typeof AppUsersUserIdEditLayoutImport
    }
  }
}

// Create and export the route tree

interface AppLayoutRouteChildren {
  AppUsersIndexRoute: typeof AppUsersIndexRoute
}

const AppLayoutRouteChildren: AppLayoutRouteChildren = {
  AppUsersIndexRoute: AppUsersIndexRoute,
}

const AppLayoutRouteWithChildren = AppLayoutRoute._addFileChildren(
  AppLayoutRouteChildren,
)

interface AuthLayoutRouteChildren {
  AuthIndexRoute: typeof AuthIndexRoute
}

const AuthLayoutRouteChildren: AuthLayoutRouteChildren = {
  AuthIndexRoute: AuthIndexRoute,
}

const AuthLayoutRouteWithChildren = AuthLayoutRoute._addFileChildren(
  AuthLayoutRouteChildren,
)

interface AppUsersUserIdEditLayoutRouteChildren {
  AppUsersUserIdEditIndexRoute: typeof AppUsersUserIdEditIndexRoute
}

const AppUsersUserIdEditLayoutRouteChildren: AppUsersUserIdEditLayoutRouteChildren =
  {
    AppUsersUserIdEditIndexRoute: AppUsersUserIdEditIndexRoute,
  }

const AppUsersUserIdEditLayoutRouteWithChildren =
  AppUsersUserIdEditLayoutRoute._addFileChildren(
    AppUsersUserIdEditLayoutRouteChildren,
  )

export interface FileRoutesByFullPath {
  '/app': typeof AppLayoutRouteWithChildren
  '/auth': typeof AuthLayoutRouteWithChildren
  '/': typeof landingIndexRoute
  '/auth/': typeof AuthIndexRoute
  '/app/users': typeof AppUsersIndexRoute
  '/app/users/$userId/edit': typeof AppUsersUserIdEditLayoutRouteWithChildren
  '/app/users/$userId/edit/': typeof AppUsersUserIdEditIndexRoute
}

export interface FileRoutesByTo {
  '/app': typeof AppLayoutRouteWithChildren
  '/': typeof landingIndexRoute
  '/auth': typeof AuthIndexRoute
  '/app/users': typeof AppUsersIndexRoute
  '/app/users/$userId/edit': typeof AppUsersUserIdEditIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/app': typeof AppLayoutRouteWithChildren
  '/auth': typeof AuthLayoutRouteWithChildren
  '/(landing)/': typeof landingIndexRoute
  '/auth/': typeof AuthIndexRoute
  '/app/users/': typeof AppUsersIndexRoute
  '/app_/users/$userId/edit': typeof AppUsersUserIdEditLayoutRouteWithChildren
  '/app_/users/$userId/edit/': typeof AppUsersUserIdEditIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/app'
    | '/auth'
    | '/'
    | '/auth/'
    | '/app/users'
    | '/app/users/$userId/edit'
    | '/app/users/$userId/edit/'
  fileRoutesByTo: FileRoutesByTo
  to: '/app' | '/' | '/auth' | '/app/users' | '/app/users/$userId/edit'
  id:
    | '__root__'
    | '/app'
    | '/auth'
    | '/(landing)/'
    | '/auth/'
    | '/app/users/'
    | '/app_/users/$userId/edit'
    | '/app_/users/$userId/edit/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AppLayoutRoute: typeof AppLayoutRouteWithChildren
  AuthLayoutRoute: typeof AuthLayoutRouteWithChildren
  landingIndexRoute: typeof landingIndexRoute
  AppUsersUserIdEditLayoutRoute: typeof AppUsersUserIdEditLayoutRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AppLayoutRoute: AppLayoutRouteWithChildren,
  AuthLayoutRoute: AuthLayoutRouteWithChildren,
  landingIndexRoute: landingIndexRoute,
  AppUsersUserIdEditLayoutRoute: AppUsersUserIdEditLayoutRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/app",
        "/auth",
        "/(landing)/",
        "/app_/users/$userId/edit"
      ]
    },
    "/app": {
      "filePath": "app/layout.tsx",
      "children": [
        "/app/users/"
      ]
    },
    "/auth": {
      "filePath": "auth/layout.tsx",
      "children": [
        "/auth/"
      ]
    },
    "/(landing)/": {
      "filePath": "(landing)/index.tsx"
    },
    "/auth/": {
      "filePath": "auth/index.tsx",
      "parent": "/auth"
    },
    "/app/users/": {
      "filePath": "app/users/index.tsx",
      "parent": "/app"
    },
    "/app_/users/$userId/edit": {
      "filePath": "app_/users/$userId/edit/layout.tsx",
      "children": [
        "/app_/users/$userId/edit/"
      ]
    },
    "/app_/users/$userId/edit/": {
      "filePath": "app_/users/$userId/edit/index.tsx",
      "parent": "/app_/users/$userId/edit"
    }
  }
}
ROUTE_MANIFEST_END */
